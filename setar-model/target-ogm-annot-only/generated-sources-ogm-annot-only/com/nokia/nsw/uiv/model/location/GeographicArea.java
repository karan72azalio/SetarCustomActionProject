// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.model.location;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonView;
import com.nokia.nsw.uiv.constants.FeatureFlag;
import com.nokia.nsw.uiv.datatype.SchemaSpecification;
import com.nokia.nsw.uiv.exception.ModificationNotAllowedException;
import com.nokia.nsw.uiv.framework.context.UivSpringContextAware;
import com.nokia.nsw.uiv.jackson.UivJsonViews;
import javax.validation.Valid;
import javax.xml.bind.annotation.XmlType;
import lombok.extern.slf4j.Slf4j;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Transient;

@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        defaultImpl = com.nokia.nsw.uiv.model.location.GeographicArea.class,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        visible = true,
        property = "@type"
)
@JsonFilter("com.nokia.nsw.uiv.model.location.GeographicArea")
@NodeEntity(
        label = "com.nokia.nsw.uiv.model.location.GeographicArea"
)
@Slf4j
@XmlType(
        name = "com.nokia.nsw.uiv.model.location.GeographicArea"
)
public class GeographicArea extends GeographicLocation {
    @JsonView(UivJsonViews.TmfView.class)
    @Transient
    @Valid
    private SchemaSpecification geographicAreaSpecification;

    public SchemaSpecification getGeographicAreaSpecification() {
        FeatureFlag featureFlag = UivSpringContextAware.getApplicationContext().getBean(FeatureFlag.class);
        if (this.getKind() != null && Boolean.parseBoolean(featureFlag.getTmfEnabled())) {
            this.geographicAreaSpecification = new SchemaSpecification();
            this.geographicAreaSpecification.setId(this.getKind());
            this.geographicAreaSpecification.setName(this.getKind());
            this.geographicAreaSpecification.setReferredType(this.getKind());
            this.geographicAreaSpecification.setVersion(this.getSchemaVersion());
        }
        return this.geographicAreaSpecification;
    }

    public void setGeographicAreaSpecification(SchemaSpecification geographicAreaSpecification)
            throws ModificationNotAllowedException {
        FeatureFlag featureFlag = UivSpringContextAware.getApplicationContext().getBean(FeatureFlag.class);
        if (Boolean.parseBoolean(featureFlag.getTmfEnabled())) {
            if (null != geographicAreaSpecification && null != geographicAreaSpecification.getId()) {
                if(null == this.getKind()) {
                    this.setSpecification(geographicAreaSpecification);
                    this.setKind(geographicAreaSpecification.getId());
                }
                else if (!this.getKind().equals(geographicAreaSpecification.getId())) {
                    throw new ModificationNotAllowedException("geographicAreaSpecification modification not allowed");
                }
            }
            this.geographicAreaSpecification = geographicAreaSpecification;
        }
    }
}

// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.model.resource;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonView;
import com.nokia.nsw.uiv.datatype.Neo4jDomainRelationshipObject;
import com.nokia.nsw.uiv.datatype.UivHashMap;
import com.nokia.nsw.uiv.jackson.UivJsonViews;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import javax.validation.constraints.Pattern;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.neo4j.ogm.annotation.EndNode;
import org.neo4j.ogm.annotation.Properties;
import org.neo4j.ogm.annotation.RelationshipEntity;
import org.neo4j.ogm.annotation.StartNode;
import org.neo4j.ogm.annotation.typeconversion.Convert;

@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        defaultImpl = com.nokia.nsw.uiv.model.resource.USES_PROTECTED.class,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        visible = true,
        property = "@type"
)
@JsonFilter("com.nokia.nsw.uiv.model.resource.USES_PROTECTED")
@RelationshipEntity(
        type = "USES_PROTECTED"
)
public class USES_PROTECTED extends Neo4jDomainRelationshipObject {
    @StartNode
    @JsonFilter("resourceStartNode")
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.model.resource.Resource}"
    )
    private Resource resourceStartNode;

    @EndNode
    @JsonFilter("resourceEndNode")
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.model.resource.Resource}"
    )
    private Resource resourceEndNode;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    private String tags;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    private Integer index;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    @Pattern(
            regexp = "((([A-Za-z0-9]+)\\.)+[0-9]+)"
    )
    private String secondaryIndex;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    private String channel;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    @Properties
    @Convert(USES_PROTECTEDPropertiesConverter.class)
    private Map<String,Object> properties = new UivHashMap<>();

    public Resource getResourceStartNode() {
        return resourceStartNode;
    }

    public void setResourceStartNode(Resource resourceStartNode) {
        this.resourceStartNode=resourceStartNode;
        this.setAssocModified(true);
    }

    public Resource getResourceEndNode() {
        return resourceEndNode;
    }

    public void setResourceEndNode(Resource resourceEndNode) {
        this.resourceEndNode=resourceEndNode;
        this.setAssocModified(true);
    }

    public String getTags() {
        return this.tags;
    }

    public void setTags(String tags) {
        if ((tags==null && this.tags!=null) || (tags != null && !tags.equals(this.tags))) {
            this.setModified(true);
        }
        this.tags=tags;
    }

    public Integer getIndex() {
        return this.index;
    }

    public void setIndex(Integer index) {
        if ((index==null && this.index!=null) || (index != null && !index.equals(this.index))) {
            this.setModified(true);
        }
        this.index=index;
    }

    public String getSecondaryIndex() {
        return this.secondaryIndex;
    }

    public void setSecondaryIndex(String secondaryIndex) {
        if ((secondaryIndex==null && this.secondaryIndex!=null) || (secondaryIndex != null && !secondaryIndex.equals(this.secondaryIndex))) {
            this.setModified(true);
        }
        this.secondaryIndex=secondaryIndex;
    }

    public String getChannel() {
        return this.channel;
    }

    public void setChannel(String channel) {
        if ((channel==null && this.channel!=null) || (channel != null && !channel.equals(this.channel))) {
            this.setModified(true);
        }
        this.channel=channel;
    }

    public Map<String, Object> getProperties() {
        return this.properties;
    }

    public void setProperties(Map<String, Object> properties) {
        if ((properties==null && this.properties!=null) || (properties != null && !properties.equals(this.properties))) {
            this.setModified(true);
        }
        if (this.properties != null && properties != null && !(properties instanceof UivHashMap)) {
            this.properties.putAll(properties);
        }
        this.properties=properties;
    }

    @Override
    public boolean equals(Object otherObj) {
        if (this == otherObj) return true;
        if (!(otherObj instanceof USES_PROTECTED)) return false;
        USES_PROTECTED other = (USES_PROTECTED) otherObj;
        if (null != this.getUuid() && this.getUuid().equals(other.getUuid())) {
            return true;
        }
        return new EqualsBuilder().append(this.getResourceStartNode(), other.getResourceStartNode())
                .append(this.getResourceEndNode(), other.getResourceEndNode())
                .isEquals();
    }

    @Override
    public int hashCode() {
        if (null != this.getUuid()) {
            return new HashCodeBuilder(17, 37).append(this.getUuid()).toHashCode();
        }
        return new HashCodeBuilder(17,37).append(getResourceStartNode())
                .append(getResourceEndNode())
                .toHashCode();
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("tags", this.tags)
                .append("index", this.index)
                .append("secondaryIndex", this.secondaryIndex)
                .append("channel", this.channel)
                .append("properties", this.properties)
                .toString();
    }
}

// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.model.location;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import org.neo4j.ogm.typeconversion.CompositeAttributeConverter;

public class GeographicAddressConverter implements CompositeAttributeConverter<GeographicAddress> {
    @Override
    public Map<String, ?> toGraphProperties(GeographicAddress value) {
        if (value == null) {
            return Collections.emptyMap();
        }
        Map<String, Object> properties = new HashMap<>();
        properties.put("geographicAddress.country", value.getCountry());
        properties.put("geographicAddress.stateOrProvince", value.getStateOrProvince());
        properties.put("geographicAddress.city", value.getCity());
        properties.put("geographicAddress.locality", value.getLocality());
        properties.put("geographicAddress.postcode", value.getPostcode());
        properties.put("geographicAddress.streetName", value.getStreetName());
        properties.put("geographicAddress.streetSuffix", value.getStreetSuffix());
        properties.put("geographicAddress.streetType", value.getStreetType());
        properties.put("geographicAddress.streetNr", value.getStreetNr());
        properties.put("geographicAddress.streetNrSuffix", value.getStreetNrSuffix());
        properties.put("geographicAddress.streetNrLast", value.getStreetNrLast());
        properties.put("geographicAddress.streetNrLastSuffix", value.getStreetNrLastSuffix());
        return properties;
    }

    @Override
    public GeographicAddress toEntityAttribute(Map<String, ?> value) {
        if (value == null || value.isEmpty()) {
            return null;
        }
        if ( value.get("geographicAddress.country") == null && value.get("geographicAddress.stateOrProvince") == null && value.get("geographicAddress.city") == null && value.get("geographicAddress.locality") == null && value.get("geographicAddress.postcode") == null && value.get("geographicAddress.streetName") == null && value.get("geographicAddress.streetSuffix") == null && value.get("geographicAddress.streetType") == null && value.get("geographicAddress.streetNr") == null && value.get("geographicAddress.streetNrSuffix") == null && value.get("geographicAddress.streetNrLast") == null && value.get("geographicAddress.streetNrLastSuffix") == null ) {
            return null;
        }
        GeographicAddress geographicAddress = new GeographicAddress();
        geographicAddress.setCountry((String) value.get("geographicAddress.country"));
        geographicAddress.setStateOrProvince((String) value.get("geographicAddress.stateOrProvince"));
        geographicAddress.setCity((String) value.get("geographicAddress.city"));
        geographicAddress.setLocality((String) value.get("geographicAddress.locality"));
        geographicAddress.setPostcode((String) value.get("geographicAddress.postcode"));
        geographicAddress.setStreetName((String) value.get("geographicAddress.streetName"));
        geographicAddress.setStreetSuffix((String) value.get("geographicAddress.streetSuffix"));
        geographicAddress.setStreetType((String) value.get("geographicAddress.streetType"));
        geographicAddress.setStreetNr((String) value.get("geographicAddress.streetNr"));
        geographicAddress.setStreetNrSuffix((String) value.get("geographicAddress.streetNrSuffix"));
        geographicAddress.setStreetNrLast((String) value.get("geographicAddress.streetNrLast"));
        geographicAddress.setStreetNrLastSuffix((String) value.get("geographicAddress.streetNrLastSuffix"));
        geographicAddress.setModified(false);
        return geographicAddress;
    }
}

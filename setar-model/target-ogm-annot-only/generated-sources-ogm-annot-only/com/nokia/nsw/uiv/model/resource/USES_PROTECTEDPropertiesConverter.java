// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.model.resource;

import com.nokia.nsw.uiv.datatype.UivHashMap;
import java.util.Map;
import org.neo4j.ogm.typeconversion.CompositeAttributeConverter;

public class USES_PROTECTEDPropertiesConverter implements CompositeAttributeConverter<Map<String, Object>> {
    @Override
    public Map<String, ?> toGraphProperties(Map<String, Object> value) {
        if (value == null) {
            return null;
        }
        Map<String, Object> properties = new UivHashMap<>();
        for (String key: value.keySet()) {
            if (value.get(key)!=null && value.get(key).getClass().equals(java.math.BigDecimal.class)) {
                value.put(key,Double.parseDouble(String.valueOf(value.get(key))));
            }
            properties.put("properties." + key, value.get(key));
        }
        return properties;
    }

    @Override
    public Map<String, Object> toEntityAttribute(Map<String, ?> value) {
        if (value == null || value.isEmpty()) {
            return null;
        }
        UivHashMap<String, Object> properties = new UivHashMap<>();
        for (String key : value.keySet()) {
            if (key.contains("properties")) {
                String mapkey = key.substring(key.indexOf(".") + 1, key.length());
                Object val = value.get(key);
                properties.put(mapkey, val);
            }
        }
        properties.setModified(false);
        return properties;
    }
}

// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.model.common;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonView;
import com.nokia.nsw.uiv.datatype.Neo4jDomainRelationshipObject;
import com.nokia.nsw.uiv.datatype.UivHashMap;
import com.nokia.nsw.uiv.jackson.UivJsonViews;
import com.nokia.nsw.uiv.model.resource.Resource;
import com.nokia.nsw.uiv.model.resource.logical.LogicalResource;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.neo4j.ogm.annotation.EndNode;
import org.neo4j.ogm.annotation.Properties;
import org.neo4j.ogm.annotation.RelationshipEntity;
import org.neo4j.ogm.annotation.StartNode;
import org.neo4j.ogm.annotation.typeconversion.Convert;

@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        defaultImpl = com.nokia.nsw.uiv.model.common.UTILIZES_RESOURCE.class,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        visible = true,
        property = "@type"
)
@JsonFilter("com.nokia.nsw.uiv.model.common.UTILIZES_RESOURCE")
@RelationshipEntity(
        type = "UTILIZES_RESOURCE"
)
public class UTILIZES_RESOURCE extends Neo4jDomainRelationshipObject {
    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    @Properties
    @Convert(UTILIZES_RESOURCEPropertiesConverter.class)
    private Map<String,Object> properties = new UivHashMap<>();

    @StartNode
    @JsonFilter("logicalResource")
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.model.resource.logical.LogicalResource}"
    )
    private LogicalResource logicalResource;

    @EndNode
    @JsonFilter("resource")
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.model.resource.Resource}"
    )
    private Resource resource;

    public Map<String, Object> getProperties() {
        return this.properties;
    }

    public void setProperties(Map<String, Object> properties) {
        if ((properties==null && this.properties!=null) || (properties != null && !properties.equals(this.properties))) {
            this.setModified(true);
        }
        if (this.properties != null && properties != null && !(properties instanceof UivHashMap)) {
            this.properties.putAll(properties);
        }
        this.properties=properties;
    }

    @Override
    public boolean equals(Object otherObj) {
        if (this == otherObj) return true;
        if (!(otherObj instanceof UTILIZES_RESOURCE)) return false;
        UTILIZES_RESOURCE other = (UTILIZES_RESOURCE) otherObj;
        if (null != this.getUuid() && this.getUuid().equals(other.getUuid())) {
            return true;
        }
        return new EqualsBuilder().append(this.getLogicalResource(), other.getLogicalResource())
                .append(this.getResource(), other.getResource())
                .isEquals();
    }

    @Override
    public int hashCode() {
        if (null != this.getUuid()) {
            return new HashCodeBuilder(17, 37).append(this.getUuid()).toHashCode();
        }
        return new HashCodeBuilder(17,37).append(getLogicalResource())
                .append(getResource())
                .toHashCode();
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("properties", this.properties)
                .toString();
    }

    public LogicalResource getLogicalResource() {
        return logicalResource;
    }

    public void setLogicalResource(LogicalResource logicalResource) {
        this.logicalResource=logicalResource;
        this.setAssocModified(true);
    }

    public Resource getResource() {
        return resource;
    }

    public void setResource(Resource resource) {
        this.resource=resource;
        this.setAssocModified(true);
    }
}

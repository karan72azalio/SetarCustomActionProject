// This source file was generated by Unified Inventory CodeGen, Please DO NOT modify this file.
package com.nokia.nsw.uiv.numbermanagement;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonView;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.nokia.nsw.uiv.datatype.Neo4jDomainNodeObject;
import com.nokia.nsw.uiv.jackson.UivDateDeserializer;
import com.nokia.nsw.uiv.jackson.UivDateSerializer;
import com.nokia.nsw.uiv.jackson.UivJsonViews;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashSet;
import javax.xml.bind.annotation.XmlType;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Relationship;

@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        defaultImpl = com.nokia.nsw.uiv.numbermanagement.Assignment.class,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        visible = true,
        property = "@type"
)
@JsonFilter("com.nokia.nsw.uiv.numbermanagement.Assignment")
@NodeEntity(
        label = "com.nokia.nsw.uiv.numbermanagement.Assignment"
)
@Slf4j
@XmlType(
        name = "com.nokia.nsw.uiv.numbermanagement.Assignment"
)
public class Assignment extends Neo4jDomainNodeObject {
    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    @JsonSerialize(
            using = UivDateSerializer.class
    )
    @JsonDeserialize(
            using = UivDateDeserializer.class
    )
    private java.util.Date assignmentDate;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    private Long assignmentDuration;

    @JsonView({
            UivJsonViews.WriteView.class,
            UivJsonViews.ReadView.class
    })
    private Float assignmentPrice;

    @JsonFilter("identifier")
    @Relationship(
            type = "CONTAINS",
            direction = "INCOMING"
    )
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.numbermanagement.Identifier}"
    )
    protected Identifier identifier;

    @JsonFilter("reservation")
    @Relationship(
            type = "IMPLEMENTS",
            direction = "OUTGOING"
    )
    @ApiModelProperty(
            dataType = "java.lang.String",
            allowableValues = "{com.nokia.nsw.uiv.numbermanagement.Reservation}"
    )
    protected Reservation reservation;

    public java.util.Date getAssignmentDate() {
        return this.assignmentDate;
    }

    public void setAssignmentDate(java.util.Date assignmentDate) {
        if ((assignmentDate==null && this.assignmentDate!=null) || (assignmentDate != null && !assignmentDate.equals(this.assignmentDate))) {
            this.setModified(true);
        }
        this.assignmentDate=assignmentDate;
    }

    public Long getAssignmentDuration() {
        return this.assignmentDuration;
    }

    public void setAssignmentDuration(Long assignmentDuration) {
        if ((assignmentDuration==null && this.assignmentDuration!=null) || (assignmentDuration != null && !assignmentDuration.equals(this.assignmentDuration))) {
            this.setModified(true);
        }
        this.assignmentDuration=assignmentDuration;
    }

    public Float getAssignmentPrice() {
        return this.assignmentPrice;
    }

    public void setAssignmentPrice(Float assignmentPrice) {
        if ((assignmentPrice==null && this.assignmentPrice!=null) || (assignmentPrice != null && !assignmentPrice.equals(this.assignmentPrice))) {
            this.setModified(true);
        }
        this.assignmentPrice=assignmentPrice;
    }

    @Override
    public boolean equals(Object otherObj) {
        if (this == otherObj) return true;
        if (!(otherObj instanceof Assignment)) return false;
        Assignment other = (Assignment) otherObj;
        if (null != this.getUuid() && this.getUuid().equals(other.getUuid())) {
            return true;
        }
        return new EqualsBuilder().append(this.assignmentDate, other.assignmentDate)
                .append(this.assignmentDuration, other.assignmentDuration)
                .append(this.assignmentPrice, other.assignmentPrice)
                .isEquals() && super.equals(otherObj);
    }

    @Override
    public int hashCode() {
        if (null != this.getUuid()) {
            return new HashCodeBuilder(17, 37).append(this.getUuid()).toHashCode();
        }
        return new HashCodeBuilder(17,37).append(assignmentDate)
                .append(assignmentDuration)
                .append(assignmentPrice)
                .appendSuper(super.hashCode()).toHashCode();
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("assignmentDate", this.assignmentDate)
                .append("assignmentDuration", this.assignmentDuration)
                .append("assignmentPrice", this.assignmentPrice)
                .toString();
    }

    public Identifier getIdentifier() {
        return this.identifier;
    }

    public void setIdentifier(Identifier identifier) {
        this.setAssocModified(true);
        Identifier previous = this.identifier;
        this.identifier=identifier;
        if (null == identifier  && null != previous) {
            previous.setAssignment(null);
        }
        if (null != identifier && (null == identifier.getAssignment() || !identifier.getAssignment().equals(this))) {
            this.set_type(this.get_type());
            identifier.setAssignment(this);
        }
    }

    public Reservation getReservation() {
        return this.reservation;
    }

    public void setReservation(Reservation reservation) {
        this.setAssocModified(true);
        if (null == reservation && null != this.reservation && null != this.reservation.getAssignment()) {
            this.reservation.getAssignment().remove(this);
        }
        this.reservation=reservation;
        if (null != reservation && (null == reservation.getAssignment() || !reservation.getAssignment().contains(this))) {
            this.set_type(this.get_type());
            if (null == reservation.getAssignment()) {
                reservation.setAssignment(new HashSet<>());
            }
            reservation.addAssignment(this);
        }
    }
}
